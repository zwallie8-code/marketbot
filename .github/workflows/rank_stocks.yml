name: Rank Stocks with GPT

on:
  workflow_dispatch:  # Allow manual runs
  workflow_run:
    workflows: ["Update Stock Market Dataset"]
    types:
      - completed

jobs:
  rank-stocks:
    runs-on: ubuntu-latest

    steps:
      # Step 1 — Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for merges

      # Step 2 — Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3 — Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4 — Run ranking script with GPT
      - name: Rank stocks with GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/gpt_rank_stocks.py

      # Step 5 — Upload ranking results as an artifact
      - name: Upload ranked stocks file
        uses: actions/upload-artifact@v3
        with:
          name: ranked-stocks
          path: output/ranked_stocks.csv

      # Step 6 — Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 7 — Retry push logic (up to 3 attempts)
      - name: Commit, merge, and push with retry
        run: |
          MAX_RETRIES=3
          COUNT=0
          until [ $COUNT -ge $MAX_RETRIES ]
          do
            echo "Attempt $((COUNT+1))/$MAX_RETRIES..."
            git fetch origin main
            git merge origin/main --strategy-option=ours || true
            git add output/ranked_stocks.csv
            git commit -m "Update ranked stocks [skip ci]" || echo "No changes to commit"
            if git push origin main; then
              echo "Push successful!"
              break
            fi
            COUNT=$((COUNT+1))
            echo "Push failed. Retrying in 5 seconds..."
            sleep 5
          done

          if [ $COUNT -ge $MAX_RETRIES ]; then
            echo "Push failed after $MAX_RETRIES attempts."
            exit 1
          fi
